/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Schedulers;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import static java.awt.GridBagConstraints.FIRST_LINE_START;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.Map;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;




public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    
    
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AWT = new javax.swing.JLabel();
        ATAT = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        processesNum = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RR = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        conSwitch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        done = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        arrival = new javax.swing.JTextField();
        burst = new javax.swing.JTextField();
        priority = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        color = new javax.swing.JButton();
        output = new javax.swing.JPanel();
        timing = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        AGATHistory = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel2.setFont(new java.awt.Font("Yu Gothic Light", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 153));
        jLabel2.setText("Schedulers");

        jRadioButton1.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 0, 51));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Priority Scheduler");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 0, 0));
        jRadioButton2.setText("Shortest-Job");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 0, 51));
        jRadioButton3.setText("SRTF");

        jRadioButton4.setBackground(new java.awt.Color(0, 51, 51));
        buttonGroup3.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jRadioButton4.setForeground(new java.awt.Color(255, 0, 0));
        jRadioButton4.setText("AGAT");

        jButton1.setBackground(new java.awt.Color(153, 0, 153));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("OK");
        buttonGroup3.add(jButton1);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 270));

        jPanel4.setBackground(new java.awt.Color(0, 51, 153));
        jPanel4.setForeground(new java.awt.Color(0, 153, 153));
        jPanel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Scheduler:");

        AWT.setForeground(new java.awt.Color(0, 153, 153));

        ATAT.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ATAT.setForeground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(168, 168, 168)
                .addComponent(AWT, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148)
                .addComponent(ATAT, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AWT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATAT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 860, 70));

        jPanel3.setBackground(new java.awt.Color(51, 0, 102));

        processesNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processesNumActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 204, 255));
        jLabel3.setText("Processes Number");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 204, 255));
        jLabel4.setText("RR");

        RR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RRActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(102, 204, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 204, 255));
        jLabel5.setText("Context Switching");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 102, 0));
        jLabel6.setText("Process Details");

        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(102, 204, 255));
        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 204, 255));
        jLabel7.setText("Name");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 204, 255));
        jLabel8.setText("Color");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 204, 255));
        jLabel9.setText("Arrival");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 204, 255));
        jLabel10.setText("Burst");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 204, 255));
        jLabel11.setText("Priority");

        name.setToolTipText("");

        priority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priorityActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        color.setText("Color");
        color.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                colorComponentHidden(evt);
            }
        });
        color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(color, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(arrival, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(burst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RR, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(priority, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(processesNum, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(jLabel6))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(conSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(done, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processesNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(conSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(done)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(color, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(burst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(priority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(RR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 70, 280, 470));

        output.setBackground(new java.awt.Color(255, 255, 204));
        output.setAlignmentX(0.0F);
        output.setAlignmentY(0.0F);
        output.setRequestFocusEnabled(false);
        output.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                outputPropertyChange(evt);
            }
        });
        output.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 320, 270));

        timing.setBackground(new java.awt.Color(0, 51, 51));
        timing.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 153, 153));
        jLabel13.setText("Waiting History");
        timing.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 91, -1, -1));

        jPanel1.add(timing, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 580, 200));

        AGATHistory.setBackground(new java.awt.Color(0, 51, 51));
        AGATHistory.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setBackground(new java.awt.Color(255, 153, 153));
        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 153));
        jLabel12.setText("AGAT History");
        AGATHistory.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 110, 13));

        jPanel1.add(AGATHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 400, 270));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorActionPerformed
        col = new JColorChooser();
        proColor = col.showDialog(jPanel1, "Process Color", col.getColor());
    }//GEN-LAST:event_colorActionPerformed

    private void colorComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_colorComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_colorComponentHidden

    private void cpuAGAT(CPUscheduler cpu2)
    {

        AWT.setText("AWT: " + cpu2.getAGATAvgWaitingTime());
        ATAT.setText("ATAT: " + cpu2.getAvgAGATTurnaroundTime());
        
        ArrayList<Process> tempProcess = cpu2.getProcesses();
        ArrayList<Process> resultProcess = cpu2.getAGATResults();
        
        ArrayList<Process> created = new ArrayList<Process>();
        
        double counter = 1;
        output = new JPanel();
        output.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, 390, 300));
        GridBagLayout gridbag = new GridBagLayout();
        output.setLayout(gridbag);
        GridBagConstraints cons = new GridBagConstraints();
        
        for(int i = 1; i < resultProcess.size(); i++)
        {
            if(!(resultProcess.get(i).getName().equals(resultProcess.get(i-1).getName())) || i == resultProcess.size()-1)
            {
                created.add(resultProcess.get(i-1));
                javax.swing.JLabel objProcess = new javax.swing.JLabel(resultProcess.get(i-1).getName());
                objProcess.setOpaque(true);
                objProcess.setBackground(resultProcess.get(i-1).getColor());
                double temp = (counter/resultProcess.size())*100;
                cons.ipadx = (int)Math.round(temp);
                cons.gridx = i;
                cons.gridy = created.indexOf(resultProcess.get(i-1));
                
                output.add(objProcess, cons);    
                counter = 1;
            }
            else
            {
                counter++;
            }
        }
    }

    private void cpuSRTF(CPUscheduler cpu2)
    {

        AWT.setText("AWT: " + cpu2.AVGWaiting);
        ATAT.setText("ATAT: " + cpu2.AVGTurn);
        
        ArrayList<Process> tempProcess = cpu2.getProcesses();
        ArrayList<Process> resultProcess = cpu2.getSRTFOrder();
        
        ArrayList<Process> created = new ArrayList<Process>();
        
        double counter = 1;
        output = new JPanel();
        output.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, 390, 300));
        GridBagLayout gridbag = new GridBagLayout();
        output.setLayout(gridbag);
        GridBagConstraints cons = new GridBagConstraints();
        
        for(int i = 1; i < resultProcess.size(); i++)
        {
            if(!(resultProcess.get(i).getName().equals(resultProcess.get(i-1).getName())) || i == resultProcess.size()-1)
            {
                created.add(resultProcess.get(i-1));
                javax.swing.JLabel objProcess = new javax.swing.JLabel(resultProcess.get(i-1).getName());
                objProcess.setOpaque(true);
                objProcess.setBackground(resultProcess.get(i-1).getColor());
                double temp = (counter/resultProcess.size())*100;
                cons.ipadx = (int)Math.round(temp);
                cons.gridx = i;
                cons.gridy = created.indexOf(resultProcess.get(i-1));
                
                output.add(objProcess, cons);    
                counter = 1;
            }
            else
            {
                counter++;
            }
        }
    }
    
    
    
    
    private void cpuGUI(CPUscheduler cpu2)
    {
        AWT.setText("AWT: " + cpu2.getWaiting());
        ATAT.setText("ATAT: " + cpu2.getTurn());
        ArrayList<String> namesTemp = cpu2.getpNames();
        ArrayList<Double> turnTemp = cpu2.getTurnAround();
        ArrayList<Process> tempProcess = cpu2.getProcesses();
        
        double all = 0;
        for(int i = 0; i < tempProcess.size(); i++)
        {
            all += tempProcess.get(i).getBurstTime();

        }
        output = new JPanel();
        output.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.add(output, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, 390, 300));
        GridBagLayout gridbag = new GridBagLayout();
        output.setLayout(gridbag);
       
        GridBagConstraints cons = new GridBagConstraints();
        for(int i = 0; i < namesTemp.size(); i++)
        {
            double turnPrecentage;
            for(int j=0; j < tempProcess.size(); j++)
            {
                if(namesTemp.get(i).equals(tempProcess.get(j).getName())){
                    turnPrecentage =  (tempProcess.get(j).getBurstTime()/all) * 100;
                    javax.swing.JLabel objProcess = new javax.swing.JLabel(tempProcess.get(j).getName());
                    objProcess.setOpaque(true);
                    objProcess.setBackground(tempProcess.get(j).getColor());
                    
                    cons.ipadx = (int)Math.round(turnPrecentage);
                    cons.gridx = i;
                    cons.gridy = i;
                    //cons.weightx =1;
                    //cons.weighty =1;
                    //cons.anchor= FIRST_LINE_START;

                    output.add(objProcess, cons);
                    break;
                }
            }
        }
    }
    
    private void viewHistory(CPUscheduler cpu2)
    {
        Map<String,ArrayList<Double>>  factor = cpu2.getAgetAGATFactorHistory();
        Map<String,ArrayList<Double>> quantum = cpu2.getAGATQuantumTimeHistory();
        ArrayList<Process> tempProcess = cpu2.getProcesses();
//        
//        AGATHistory = new JPanel();
//
//        AGATHistory.setBackground(new java.awt.Color(0, 51, 51));
//        AGATHistory.setLayout(new java.awt.GridLayout(20, 1,0,3));
//
//        jLabel12.setBackground(new java.awt.Color(255, 153, 153));
//        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
//        jLabel12.setForeground(new java.awt.Color(255, 153, 153));
//        jLabel12.setText("AGAT History");
//
//        jPanel1.add(AGATHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 400, 270));
//        AGATHistory.add(jLabel12);

        AGATHistory = new JPanel();
        AGATHistory.setBackground(new java.awt.Color(0, 51, 51));
        
        GridBagLayout gridbag = new GridBagLayout();
        
        AGATHistory.setLayout(gridbag);
        GridBagConstraints cons = new GridBagConstraints();

        jPanel1.add(AGATHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 400, 270));
        int counter = 0;
        cons.gridx = 0;
        cons.gridy = counter;
        counter++;
        cons.weightx =1;
        cons.weighty =1;
        cons.anchor= FIRST_LINE_START;
                    
        jLabel12.setBackground(new java.awt.Color(255, 153, 153));
        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 153));
        jLabel12.setText("AGAT History");
        
        AGATHistory.add(jLabel12, cons);
        

        for(int i = 0; i < tempProcess.size(); i++)
        {
            ArrayList<Double> factorArray = factor.get(tempProcess.get(i).getName());
            ArrayList<Double> quantumArray = quantum.get(tempProcess.get(i).getName());
            
            javax.swing.JLabel objProcess = new javax.swing.JLabel(tempProcess.get(i).getName());
            objProcess.setOpaque(true);
            cons.gridy = counter;
            counter++;
            cons.gridx = 0;
            AGATHistory.add(objProcess,cons);
            
            String factorText = "Factor History: ";
            for(int j = 0; j < factorArray.size(); j++)
            {
                factorText = factorText + factorArray.get(j) + ", ";
            }
            javax.swing.JLabel HistoryProcess = new javax.swing.JLabel(factorText);
            cons.gridy = counter;
            counter++;
            cons.gridx = 0;
            AGATHistory.add(HistoryProcess, cons);
            
            String quantumText = "Quantum History: ";
            for(int j = 0; j < quantumArray.size(); j++)
            {
                quantumText = quantumText + quantumArray.get(j) + ", ";
            }
            javax.swing.JLabel HistoryProcess2 = new javax.swing.JLabel(quantumText);
            cons.gridy = counter;
            counter++;
            cons.gridx = 0;
            AGATHistory.add(HistoryProcess2,cons);
        }
    }

    private void waitingHistory(CPUscheduler cpu2)
    {
        ArrayList<Process> tempProcess = cpu2.getProcesses();
        timing = new JPanel();
        timing.setBackground(new java.awt.Color(0, 51, 51));
        GridBagLayout gridbag = new GridBagLayout();
        timing.setLayout(gridbag);
        GridBagConstraints cons = new GridBagConstraints();
        jPanel1.add(timing, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 580, 200));
        
        
        int counter = 0;
        cons.gridx = 0;
        cons.gridy = counter;
        int counterx = 0;
        counter++;
        cons.weightx =1;
        cons.weighty =1;
        cons.anchor= FIRST_LINE_START;            
        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 153, 153));
        jLabel13.setText("Waiting History");
        timing.add(jLabel13, cons);

        for(int i = 0; i < tempProcess.size(); i++)
        { 
            if(i % 2 == 0 && i != 0)
            {
                counterx++;
                counter = 1;
            }
            javax.swing.JLabel objProcess = new javax.swing.JLabel(tempProcess.get(i).getName());
            objProcess.setOpaque(true);
            //objProcess.setBorder(new EmptyBorder(10,0,0,0));
            cons.gridy = counter;
            counter++;
            cons.gridx = counterx;
            timing.add(objProcess,cons);
            
            String waitingText = "Waiting Time: " + tempProcess.get(i).getWaitingTime();
            javax.swing.JLabel HistoryProcess = new javax.swing.JLabel(waitingText);
            //HistoryProcess.setBorder(new EmptyBorder(10,0,0,0));
            cons.ipadx = 1;
            cons.gridy = counter;
            counter++;
            cons.gridx = counterx;
            timing.add(HistoryProcess,cons);

            String turnAroundText = "Turn Around Time: " + tempProcess.get(i).getTurnaround();
            javax.swing.JLabel HistoryProcess2 = new javax.swing.JLabel(turnAroundText);
            //HistoryProcess2.setBorder(new EmptyBorder(10,0,0,0));
            cons.ipadx = 1;
            cons.gridy = counter;
            counter++;
            cons.gridx = counterx;
            timing.add(HistoryProcess2,cons);
        }
    }
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if(maxProcess < parseInt(processesNum.getText()))
        {
            cpu.add(new Process(name.getText(), proColor, parseInt(arrival.getText()), parseInt(burst.getText()), parseInt(priority.getText()), parseInt(RR.getText())));
            if(maxProcess == parseInt(processesNum.getText()) - 1)
            add.setText("run");
        }

        if(( add.getText().equals("run") ) && (maxProcess  >= parseInt(processesNum.getText())))
        {
            if(jLabel1.getText().equals("Priority Scheduler"))
            {
                cpu.priorityScheduling();
                cpuGUI(cpu);
                waitingHistory(cpu);
            }
            else if(jLabel1.getText().equals("Shortest-Job First"))
            {
                cpu.shortestJobFirst();
                cpuGUI(cpu);
                waitingHistory(cpu);
            }
            else if(jLabel1.getText().equals("SRTF"))
            {
                cpu.shortestRemainingTimeFirst();
                cpuSRTF(cpu);
                waitingHistory(cpu);
            }
            else
            {
                cpu.Agat();
                cpuAGAT(cpu);
                viewHistory(cpu);
                waitingHistory(cpu);
            }
            add.setEnabled(false);
        }
        ++maxProcess;
    }//GEN-LAST:event_addActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed

        //context switch, process number,   "round robin"
        //CPUscheduler cpuMain = new CPUscheduler(parseInt(conSwitch.getText()), parseInt(processesNum.getText()));
        cpu = new CPUscheduler(parseInt(conSwitch.getText()), parseInt(processesNum.getText()));

        //name, color, arrivalTime, burstTime, priorityNumber, quantum

    }//GEN-LAST:event_doneActionPerformed

    private void RRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RRActionPerformed

    private void processesNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processesNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_processesNumActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jRadioButton1.setActionCommand("Priority Scheduler");
        jRadioButton2.setActionCommand("Shortest-Job First");
        jRadioButton3.setActionCommand("SRTF");

        jRadioButton4.setActionCommand("AGAT");

        jLabel1.setText(buttonGroup3.getSelection().getActionCommand());
        if( (!cpu.isEmpty()) && ( maxProcess >= parseInt(processesNum.getText()) ))
        {
            if(buttonGroup3.getSelection().getActionCommand().equals("Priority Scheduler"))
            {
                cpu.priorityScheduling();
                cpuGUI(cpu);
                waitingHistory(cpu);
            }
            else if(buttonGroup3.getSelection().getActionCommand().equals("Shortest-Job First"))
            {
                cpu.shortestJobFirst();
                cpuGUI(cpu);
                waitingHistory(cpu);
            }
            else if(buttonGroup3.getSelection().getActionCommand().equals("SRTF"))
            {
                cpu.shortestRemainingTimeFirst();
                cpuSRTF(cpu);
                waitingHistory(cpu);
            }
            else
            {
                cpu.Agat();
                cpuAGAT(cpu);
                viewHistory(cpu);
                waitingHistory(cpu);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void priorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priorityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priorityActionPerformed

    private void outputPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_outputPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_outputPropertyChange
        
          
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    JColorChooser col;
    CPUscheduler cpu = new CPUscheduler();
    Color proColor;
    int maxProcess = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AGATHistory;
    private javax.swing.JLabel ATAT;
    private javax.swing.JLabel AWT;
    private javax.swing.JTextField RR;
    private javax.swing.JButton add;
    private javax.swing.JTextField arrival;
    private javax.swing.JTextField burst;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton color;
    private javax.swing.JTextField conSwitch;
    private javax.swing.JButton done;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JTextField name;
    private javax.swing.JPanel output;
    private javax.swing.JTextField priority;
    private javax.swing.JTextField processesNum;
    private javax.swing.JPanel timing;
    // End of variables declaration//GEN-END:variables
}
